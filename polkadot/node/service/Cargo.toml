[package]
name = "polkadot-service"
rust-version = "1.60"
version = "17.0.1"
authors.workspace = true
edition.workspace = true
license.workspace = true
description = "Utils to tie different Polkadot components together and allow instantiation of a node. (polkadot v1.15.0)"

[lints]
workspace = true

[dependencies]
sc-authority-discovery.workspace = true
sc-authority-discovery.default-features = true
sc-consensus-babe.workspace = true
sc-consensus-babe.default-features = true
sc-consensus-beefy.workspace = true
sc-consensus-beefy.default-features = true
sc-consensus-grandpa.workspace = true
sc-consensus-grandpa.default-features = true
mmr-gadget.workspace = true
mmr-gadget.default-features = true
sp-mmr-primitives.workspace = true
sp-mmr-primitives.default-features = true
sc-block-builder.workspace = true
sc-block-builder.default-features = true
sc-chain-spec.workspace = true
sc-chain-spec.default-features = true
sc-client-api.workspace = true
sc-client-api.default-features = true
sc-client-db.workspace = true
sc-client-db.default-features = true
sc-consensus.workspace = true
sc-consensus.default-features = true
sc-consensus-slots.workspace = true
sc-consensus-slots.default-features = true
sc-executor.workspace = true
sc-executor.default-features = true
sc-network.workspace = true
sc-network.default-features = true
sc-network-common.workspace = true
sc-network-common.default-features = true
sc-network-sync.workspace = true
sc-network-sync.default-features = true
sc-transaction-pool.workspace = true
sc-transaction-pool.default-features = true
sc-transaction-pool-api.workspace = true
sc-transaction-pool-api.default-features = true
sc-sync-state-rpc.workspace = true
sc-sync-state-rpc.default-features = true
sc-keystore.workspace = true
sc-keystore.default-features = true
sc-basic-authorship.workspace = true
sc-basic-authorship.default-features = true
sc-offchain.workspace = true
sc-offchain.default-features = true
sc-sysinfo.workspace = true
sc-sysinfo.default-features = true
sc-service.workspace = true
sc-telemetry.workspace = true
sc-telemetry.default-features = true
sp-authority-discovery.workspace = true
sp-authority-discovery.default-features = true
sp-consensus.workspace = true
sp-consensus.default-features = true
sp-consensus-beefy.workspace = true
sp-consensus-beefy.default-features = true
sp-consensus-grandpa.workspace = true
sp-consensus-grandpa.default-features = true
sp-inherents.workspace = true
sp-inherents.default-features = true
sp-keyring.workspace = true
sp-keyring.default-features = true
sp-api.workspace = true
sp-api.default-features = true
sp-block-builder.workspace = true
sp-block-builder.default-features = true
sp-blockchain.workspace = true
sp-blockchain.default-features = true
sp-core.workspace = true
sp-core.default-features = true
sp-io.workspace = true
sp-io.default-features = true
sp-keystore.workspace = true
sp-keystore.default-features = true
sp-offchain.workspace = true
sp-offchain.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true
sp-session.workspace = true
sp-session.default-features = true
sp-storage.workspace = true
sp-storage.default-features = true
sp-transaction-pool.workspace = true
sp-transaction-pool.default-features = true
pallet-transaction-payment.workspace = true
pallet-transaction-payment.default-features = true
sp-timestamp.workspace = true
sp-timestamp.default-features = true
sp-consensus-babe.workspace = true
sp-consensus-babe.default-features = true
sp-state-machine.workspace = true
sp-state-machine.default-features = true
sp-weights.workspace = true
sp-weights.default-features = true
sp-version.workspace = true
sp-version.default-features = true
pallet-babe.workspace = true
pallet-babe.default-features = true
pallet-staking.workspace = true
pallet-staking.default-features = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-transaction-payment-rpc-runtime-api.default-features = true
frame-metadata-hash-extension = { optional = true, workspace = true, default-features = true }
frame-system.workspace = true
frame-system.default-features = true
frame-system-rpc-runtime-api.workspace = true
frame-system-rpc-runtime-api.default-features = true
prometheus-endpoint.workspace = true
prometheus-endpoint.default-features = true
frame-support.workspace = true
frame-support.default-features = true
frame-benchmarking-cli.workspace = true
frame-benchmarking-cli.default-features = true
frame-benchmarking.workspace = true
frame-benchmarking.default-features = true

# External Crates
async-trait = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true, default-features = true }
is_executable = { workspace = true }
gum.workspace = true
gum.default-features = true
log = { workspace = true, default-features = true }
schnellru = { workspace = true }
serde = { features = ["derive"], workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }
thiserror = { workspace = true }
kvdb = { workspace = true }
kvdb-rocksdb = { optional = true, workspace = true }
parity-db = { optional = true, workspace = true }
codec = { workspace = true, default-features = true }
parking_lot = { workspace = true, default-features = true }
bitvec = { optional = true, workspace = true, default-features = true }
polkadot-core-primitives.workspace = true
polkadot-core-primitives.default-features = true
polkadot-node-core-parachains-inherent.workspace = true
polkadot-node-core-parachains-inherent.default-features = true
polkadot-overseer.workspace = true
polkadot-overseer.default-features = true
polkadot-parachain-primitives.workspace = true
polkadot-parachain-primitives.default-features = true
polkadot-primitives.workspace = true
polkadot-primitives.default-features = true
polkadot-node-primitives.workspace = true
polkadot-node-primitives.default-features = true
polkadot-rpc.workspace = true
polkadot-rpc.default-features = true
polkadot-node-subsystem.workspace = true
polkadot-node-subsystem.default-features = true
polkadot-node-subsystem-util.workspace = true
polkadot-node-subsystem-util.default-features = true
polkadot-node-subsystem-types.workspace = true
polkadot-node-subsystem-types.default-features = true
polkadot-runtime-parachains.workspace = true
polkadot-runtime-parachains.default-features = true
polkadot-node-network-protocol.workspace = true
polkadot-node-network-protocol.default-features = true
rococo-runtime-constants = { optional = true, workspace = true, default-features = true }
westend-runtime-constants = { optional = true, workspace = true, default-features = true }
westend-runtime = { optional = true, workspace = true }
rococo-runtime = { optional = true, workspace = true }
polkadot-approval-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-bitfield-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-recovery = { optional = true, workspace = true, default-features = true }
polkadot-collator-protocol = { optional = true, workspace = true, default-features = true }
polkadot-dispute-distribution = { optional = true, workspace = true, default-features = true }
polkadot-gossip-support = { optional = true, workspace = true, default-features = true }
polkadot-network-bridge = { optional = true, workspace = true, default-features = true }
polkadot-node-collation-generation = { optional = true, workspace = true, default-features = true }
polkadot-node-core-approval-voting = { optional = true, workspace = true, default-features = true }
polkadot-node-core-av-store = { optional = true, workspace = true, default-features = true }
polkadot-node-core-backing = { optional = true, workspace = true, default-features = true }
polkadot-node-core-bitfield-signing = { optional = true, workspace = true, default-features = true }
polkadot-node-core-candidate-validation = { optional = true, workspace = true, default-features = true }
polkadot-node-core-chain-api = { optional = true, workspace = true, default-features = true }
polkadot-node-core-chain-selection = { optional = true, workspace = true, default-features = true }
polkadot-node-core-dispute-coordinator = { optional = true, workspace = true, default-features = true }
polkadot-node-core-prospective-parachains = { optional = true, workspace = true, default-features = true }
polkadot-node-core-provisioner = { optional = true, workspace = true, default-features = true }
polkadot-node-core-pvf = { optional = true, workspace = true, default-features = true }
polkadot-node-core-pvf-checker = { optional = true, workspace = true, default-features = true }
polkadot-node-core-runtime-api = { optional = true, workspace = true, default-features = true }
polkadot-statement-distribution = { optional = true, workspace = true, default-features = true }
xcm.workspace = true
xcm.default-features = true
xcm-runtime-apis.workspace = true
xcm-runtime-apis.default-features = true

[dev-dependencies]
polkadot-test-client = { path = "../test/client" }
polkadot-node-subsystem-test-helpers = { path = "../subsystem-test-helpers" }
polkadot-primitives-test-helpers = { path = "../../primitives/test-helpers" }
env_logger = { workspace = true }
assert_matches = { workspace = true }
serial_test = { workspace = true }
tempfile = { workspace = true }

[features]
default = ["db", "full-node"]

db = ["sc-service/rocksdb"]

full-node = [
	"kvdb-rocksdb",
	"parity-db",
	"polkadot-approval-distribution",
	"polkadot-availability-bitfield-distribution",
	"polkadot-availability-distribution",
	"polkadot-availability-recovery",
	"polkadot-collator-protocol",
	"polkadot-dispute-distribution",
	"polkadot-gossip-support",
	"polkadot-network-bridge",
	"polkadot-node-collation-generation",
	"polkadot-node-core-approval-voting",
	"polkadot-node-core-av-store",
	"polkadot-node-core-backing",
	"polkadot-node-core-bitfield-signing",
	"polkadot-node-core-candidate-validation",
	"polkadot-node-core-chain-api",
	"polkadot-node-core-chain-selection",
	"polkadot-node-core-dispute-coordinator",
	"polkadot-node-core-prospective-parachains",
	"polkadot-node-core-provisioner",
	"polkadot-node-core-pvf",
	"polkadot-node-core-pvf-checker",
	"polkadot-node-core-runtime-api",
	"polkadot-statement-distribution",
]

# Configure the native runtimes to use.
westend-native = [
	"bitvec",
	"frame-metadata-hash-extension",
	"westend-runtime",
	"westend-runtime-constants",
]
rococo-native = [
	"bitvec",
	"frame-metadata-hash-extension",
	"rococo-runtime",
	"rococo-runtime-constants",
]

# Generate the metadata hash needed for CheckMetadataHash
# in the test runtimes.
metadata-hash = [
	"rococo-runtime?/metadata-hash",
	"westend-runtime?/metadata-hash",
]

runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"polkadot-runtime-parachains/runtime-benchmarks",
	"rococo-runtime?/runtime-benchmarks",
	"sc-client-db/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"westend-runtime?/runtime-benchmarks",
	"xcm-runtime-apis/runtime-benchmarks",
	"polkadot-test-client/runtime-benchmarks",
	"frame-metadata-hash-extension?/runtime-benchmarks",
	"mmr-gadget/runtime-benchmarks",
	"pallet-transaction-payment/runtime-benchmarks",
	"pallet-transaction-payment-rpc-runtime-api/runtime-benchmarks",
	"polkadot-approval-distribution?/runtime-benchmarks",
	"polkadot-availability-bitfield-distribution?/runtime-benchmarks",
	"polkadot-availability-distribution?/runtime-benchmarks",
	"polkadot-availability-recovery?/runtime-benchmarks",
	"polkadot-collator-protocol?/runtime-benchmarks",
	"polkadot-core-primitives/runtime-benchmarks",
	"polkadot-dispute-distribution?/runtime-benchmarks",
	"polkadot-gossip-support?/runtime-benchmarks",
	"polkadot-network-bridge?/runtime-benchmarks",
	"polkadot-node-collation-generation?/runtime-benchmarks",
	"polkadot-node-core-approval-voting?/runtime-benchmarks",
	"polkadot-node-core-av-store?/runtime-benchmarks",
	"polkadot-node-core-backing?/runtime-benchmarks",
	"polkadot-node-core-bitfield-signing?/runtime-benchmarks",
	"polkadot-node-core-candidate-validation?/runtime-benchmarks",
	"polkadot-node-core-chain-api?/runtime-benchmarks",
	"polkadot-node-core-chain-selection?/runtime-benchmarks",
	"polkadot-node-core-dispute-coordinator?/runtime-benchmarks",
	"polkadot-node-core-parachains-inherent/runtime-benchmarks",
	"polkadot-node-core-prospective-parachains?/runtime-benchmarks",
	"polkadot-node-core-provisioner?/runtime-benchmarks",
	"polkadot-node-core-pvf?/runtime-benchmarks",
	"polkadot-node-core-pvf-checker?/runtime-benchmarks",
	"polkadot-node-core-runtime-api?/runtime-benchmarks",
	"polkadot-node-network-protocol/runtime-benchmarks",
	"polkadot-node-primitives/runtime-benchmarks",
	"polkadot-node-subsystem-test-helpers/runtime-benchmarks",
	"polkadot-node-subsystem-types/runtime-benchmarks",
	"polkadot-node-subsystem-util/runtime-benchmarks",
	"polkadot-overseer/runtime-benchmarks",
	"polkadot-primitives-test-helpers/runtime-benchmarks",
	"polkadot-rpc/runtime-benchmarks",
	"polkadot-statement-distribution?/runtime-benchmarks",
	"rococo-runtime-constants?/runtime-benchmarks",
	"sc-authority-discovery/runtime-benchmarks",
	"sc-basic-authorship/runtime-benchmarks",
	"sc-block-builder/runtime-benchmarks",
	"sc-chain-spec/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-consensus-babe/runtime-benchmarks",
	"sc-consensus-beefy/runtime-benchmarks",
	"sc-consensus-grandpa/runtime-benchmarks",
	"sc-consensus-slots/runtime-benchmarks",
	"sc-executor/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-network-common/runtime-benchmarks",
	"sc-network-sync/runtime-benchmarks",
	"sc-offchain/runtime-benchmarks",
	"sc-sync-state-rpc/runtime-benchmarks",
	"sc-sysinfo/runtime-benchmarks",
	"sc-transaction-pool/runtime-benchmarks",
	"sc-transaction-pool-api/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-authority-discovery/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-babe/runtime-benchmarks",
	"sp-consensus-beefy/runtime-benchmarks",
	"sp-consensus-grandpa/runtime-benchmarks",
	"sp-inherents/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-mmr-primitives/runtime-benchmarks",
	"sp-offchain/runtime-benchmarks",
	"sp-session/runtime-benchmarks",
	"sp-state-machine/runtime-benchmarks",
	"sp-timestamp/runtime-benchmarks",
	"sp-transaction-pool/runtime-benchmarks",
	"sp-version/runtime-benchmarks",
	"gum/runtime-benchmarks",
	"westend-runtime-constants?/runtime-benchmarks",
	"frame-system-rpc-runtime-api/runtime-benchmarks",
	"polkadot-node-subsystem/runtime-benchmarks",
	"sc-telemetry/runtime-benchmarks",
	"sp-io/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"xcm/runtime-benchmarks",
	"sc-keystore/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"polkadot-runtime-parachains/try-runtime",
	"rococo-runtime?/try-runtime",
	"sp-runtime/try-runtime",
	"westend-runtime?/try-runtime",
	"frame-benchmarking/try-runtime",
	"frame-benchmarking-cli/try-runtime",
	"frame-metadata-hash-extension?/try-runtime",
	"mmr-gadget/try-runtime",
	"pallet-transaction-payment-rpc-runtime-api/try-runtime",
	"polkadot-collator-protocol?/try-runtime",
	"polkadot-core-primitives/try-runtime",
	"polkadot-node-core-approval-voting?/try-runtime",
	"polkadot-node-core-pvf?/try-runtime",
	"polkadot-node-core-pvf-checker?/try-runtime",
	"polkadot-node-network-protocol/try-runtime",
	"polkadot-node-primitives/try-runtime",
	"polkadot-node-subsystem-types/try-runtime",
	"polkadot-parachain-primitives/try-runtime",
	"polkadot-primitives/try-runtime",
	"polkadot-primitives-test-helpers/try-runtime",
	"polkadot-rpc/try-runtime",
	"polkadot-test-client/try-runtime",
	"rococo-runtime-constants?/try-runtime",
	"sc-authority-discovery/try-runtime",
	"sc-basic-authorship/try-runtime",
	"sc-block-builder/try-runtime",
	"sc-chain-spec/try-runtime",
	"sc-client-api/try-runtime",
	"sc-client-db/try-runtime",
	"sc-consensus/try-runtime",
	"sc-consensus-babe/try-runtime",
	"sc-consensus-beefy/try-runtime",
	"sc-consensus-grandpa/try-runtime",
	"sc-consensus-slots/try-runtime",
	"sc-executor/try-runtime",
	"sc-network/try-runtime",
	"sc-network-common/try-runtime",
	"sc-network-sync/try-runtime",
	"sc-offchain/try-runtime",
	"sc-service/try-runtime",
	"sc-sync-state-rpc/try-runtime",
	"sc-sysinfo/try-runtime",
	"sc-transaction-pool/try-runtime",
	"sc-transaction-pool-api/try-runtime",
	"sp-api/try-runtime",
	"sp-authority-discovery/try-runtime",
	"sp-block-builder/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-babe/try-runtime",
	"sp-consensus-beefy/try-runtime",
	"sp-consensus-grandpa/try-runtime",
	"sp-inherents/try-runtime",
	"sp-keyring/try-runtime",
	"sp-mmr-primitives/try-runtime",
	"sp-offchain/try-runtime",
	"sp-session/try-runtime",
	"sp-state-machine/try-runtime",
	"sp-timestamp/try-runtime",
	"sp-transaction-pool/try-runtime",
	"sp-version/try-runtime",
	"westend-runtime-constants?/try-runtime",
	"xcm-runtime-apis/try-runtime",
	"frame-system-rpc-runtime-api/try-runtime",
	"polkadot-approval-distribution?/try-runtime",
	"polkadot-availability-bitfield-distribution?/try-runtime",
	"polkadot-availability-distribution?/try-runtime",
	"polkadot-availability-recovery?/try-runtime",
	"polkadot-dispute-distribution?/try-runtime",
	"polkadot-gossip-support?/try-runtime",
	"polkadot-network-bridge?/try-runtime",
	"polkadot-node-collation-generation?/try-runtime",
	"polkadot-node-core-av-store?/try-runtime",
	"polkadot-node-core-backing?/try-runtime",
	"polkadot-node-core-bitfield-signing?/try-runtime",
	"polkadot-node-core-candidate-validation?/try-runtime",
	"polkadot-node-core-chain-api?/try-runtime",
	"polkadot-node-core-chain-selection?/try-runtime",
	"polkadot-node-core-dispute-coordinator?/try-runtime",
	"polkadot-node-core-parachains-inherent/try-runtime",
	"polkadot-node-core-prospective-parachains?/try-runtime",
	"polkadot-node-core-provisioner?/try-runtime",
	"polkadot-node-core-runtime-api?/try-runtime",
	"polkadot-node-subsystem/try-runtime",
	"polkadot-node-subsystem-test-helpers/try-runtime",
	"polkadot-node-subsystem-util/try-runtime",
	"polkadot-overseer/try-runtime",
	"polkadot-statement-distribution?/try-runtime",
	"sc-telemetry/try-runtime",
	"sp-io/try-runtime",
	"gum/try-runtime",
	"sp-core/try-runtime",
	"xcm/try-runtime",
	"sc-keystore/try-runtime",
	"sp-keystore/try-runtime"
]
fast-runtime = ["rococo-runtime?/fast-runtime", "westend-runtime?/fast-runtime"]

malus = ["full-node"]
runtime-metrics = [
	"polkadot-runtime-parachains/runtime-metrics",
	"rococo-runtime?/runtime-metrics",
	"westend-runtime?/runtime-metrics",
]
std = [
	"frame-benchmarking-cli/std",
	"log/std",
	"mmr-gadget/std",
	"polkadot-approval-distribution?/std",
	"polkadot-availability-bitfield-distribution?/std",
	"polkadot-availability-distribution?/std",
	"polkadot-availability-recovery?/std",
	"polkadot-collator-protocol?/std",
	"polkadot-dispute-distribution?/std",
	"polkadot-gossip-support?/std",
	"polkadot-network-bridge?/std",
	"polkadot-node-collation-generation?/std",
	"polkadot-node-core-approval-voting?/std",
	"polkadot-node-core-av-store?/std",
	"polkadot-node-core-backing?/std",
	"polkadot-node-core-bitfield-signing?/std",
	"polkadot-node-core-candidate-validation?/std",
	"polkadot-node-core-chain-api?/std",
	"polkadot-node-core-chain-selection?/std",
	"polkadot-node-core-dispute-coordinator?/std",
	"polkadot-node-core-parachains-inherent/std",
	"polkadot-node-core-prospective-parachains?/std",
	"polkadot-node-core-provisioner?/std",
	"polkadot-node-core-pvf?/std",
	"polkadot-node-core-pvf-checker?/std",
	"polkadot-node-core-runtime-api?/std",
	"polkadot-node-network-protocol/std",
	"polkadot-node-primitives/std",
	"polkadot-node-subsystem-test-helpers/std",
	"polkadot-node-subsystem-types/std",
	"polkadot-node-subsystem-util/std",
	"polkadot-overseer/std",
	"polkadot-primitives-test-helpers/std",
	"polkadot-rpc/std",
	"polkadot-statement-distribution?/std",
	"polkadot-test-client/std",
	"sc-authority-discovery/std",
	"sc-basic-authorship/std",
	"sc-block-builder/std",
	"sc-chain-spec/std",
	"sc-client-api/std",
	"sc-client-db/std",
	"sc-consensus/std",
	"sc-consensus-babe/std",
	"sc-consensus-beefy/std",
	"sc-consensus-grandpa/std",
	"sc-consensus-slots/std",
	"sc-keystore/std",
	"sc-network/std",
	"sc-network-common/std",
	"sc-network-sync/std",
	"sc-offchain/std",
	"sc-service/std",
	"sc-sync-state-rpc/std",
	"sc-sysinfo/std",
	"sc-telemetry/std",
	"sc-transaction-pool/std",
	"sc-transaction-pool-api/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"gum/std",
	"polkadot-node-subsystem/std"
]
