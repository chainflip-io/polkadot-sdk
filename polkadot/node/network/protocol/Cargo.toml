[package]
name = "polkadot-node-network-protocol"
version = "17.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
description = "Primitives types for the Node-side (polkadot v1.15.0)"

[lints]
workspace = true

[dependencies]
async-channel = { workspace = true }
async-trait = { workspace = true }
hex = { workspace = true, default-features = true }
polkadot-primitives.workspace = true
polkadot-primitives.default-features = true
polkadot-node-primitives.workspace = true
polkadot-node-primitives.default-features = true
polkadot-node-jaeger.workspace = true
polkadot-node-jaeger.default-features = true
codec = { features = ["derive"], workspace = true }
sc-network.workspace = true
sc-network.default-features = true
sc-network-types.workspace = true
sc-network-types.default-features = true
sc-authority-discovery.workspace = true
sc-authority-discovery.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true
strum = { features = ["derive"], workspace = true, default-features = true }
futures = { workspace = true }
thiserror = { workspace = true }
fatality = { workspace = true }
rand = { workspace = true, default-features = true }
derive_more = { workspace = true, default-features = true }
gum.workspace = true
gum.default-features = true
bitvec = { workspace = true, default-features = true }

[dev-dependencies]
rand_chacha = { workspace = true, default-features = true }

[features]
std = [
	"codec/std",
	"polkadot-node-jaeger/std",
	"polkadot-node-primitives/std",
	"sc-authority-discovery/std",
	"sc-network/std",
	"sc-network-types/std",
	"gum/std"
]
runtime-benchmarks = [
	"polkadot-node-jaeger/runtime-benchmarks",
	"polkadot-node-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-authority-discovery/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"gum/runtime-benchmarks"
]
try-runtime = [
	"polkadot-node-primitives/try-runtime",
	"polkadot-primitives/try-runtime",
	"sc-authority-discovery/try-runtime",
	"sc-network/try-runtime",
	"sp-runtime/try-runtime",
	"polkadot-node-jaeger/try-runtime",
	"gum/try-runtime"
]
