[package]
name = "substrate-test-runtime"
version = "2.0.0"
authors.workspace = true
edition.workspace = true
build = "build.rs"
license = "Apache-2.0"
homepage = "https://substrate.io"
repository.workspace = true
publish = false
description = "substrate-test-runtime (polkadot v1.15.0)"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
sp-application-crypto = { features = ["serde"], workspace = true }
sp-consensus-aura = { features = ["serde"], workspace = true }
sp-consensus-babe = { features = ["serde"], workspace = true }
sp-genesis-builder.workspace = true
sp-block-builder.workspace = true
codec = { features = ["derive"], workspace = true }
scale-info = { features = ["derive"], workspace = true }
sp-inherents.workspace = true
sp-keyring.workspace = true
sp-offchain.workspace = true
sp-core = { features = ["serde"], workspace = true }
sp-crypto-hashing.workspace = true
sp-io.workspace = true
frame-support.workspace = true
sp-version.workspace = true
sp-session.workspace = true
sp-api.workspace = true
sp-runtime = { features = ["serde"], workspace = true }
pallet-babe.workspace = true
pallet-balances.workspace = true
frame-executive.workspace = true
frame-metadata-hash-extension.workspace = true
frame-system.workspace = true
frame-system-rpc-runtime-api.workspace = true
pallet-timestamp.workspace = true
sp-consensus-grandpa = { features = ["serde"], workspace = true }
sp-trie.workspace = true
sp-transaction-pool.workspace = true
trie-db = { workspace = true }
sc-service = { features = ["test-helpers"], optional = true, workspace = true }
sp-state-machine.workspace = true
sp-externalities.workspace = true

# 3rd party
array-bytes = { optional = true, workspace = true, default-features = true }
serde_json = { workspace = true, features = ["alloc"] }
log = { workspace = true }
tracing = { workspace = true, default-features = false }

[dev-dependencies]
futures = { workspace = true }
sc-block-builder = { default-features = true, path = "../../client/block-builder" }
sc-chain-spec = { default-features = true, path = "../../client/chain-spec" }
sc-executor = { default-features = true, path = "../../client/executor" }
sc-executor-common = { default-features = true, path = "../../client/executor/common" }
sp-consensus = { default-features = true, path = "../../primitives/consensus/common" }
substrate-test-runtime-client = { path = "client" }
sp-tracing = { default-features = true, path = "../../primitives/tracing" }
serde = { features = ["alloc", "derive"], workspace = true }
serde_json = { features = ["alloc"], workspace = true }

[build-dependencies]
substrate-wasm-builder = { optional = true, features = ["metadata-hash"], workspace = true, default-features = true }

[features]
default = ["std"]

std = [
	"array-bytes",
	"codec/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"log/std",
	"pallet-babe/std",
	"pallet-balances/std",
	"pallet-timestamp/std",
	"sc-service",
	"scale-info/std",
	"serde_json/std",
	"sp-api/std",
	"sp-application-crypto/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-babe/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-crypto-hashing/std",
	"sp-externalities/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-keyring/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-state-machine/std",
	"sp-transaction-pool/std",
	"sp-trie/std",
	"sp-version/std",
	"substrate-wasm-builder",
	"tracing/std",
	"trie-db/std",
	"serde/std",
	"sc-block-builder/std",
	"sc-chain-spec/std",
	"sc-executor-common/std",
	"sc-service?/std",
	"sp-consensus/std",
	"substrate-test-runtime-client/std",
	"substrate-wasm-builder?/std"
]

# Special feature to disable logging
disable-logging = ["sp-api/disable-logging"]
runtime-benchmarks = [
	"frame-executive/runtime-benchmarks",
	"frame-metadata-hash-extension/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sc-block-builder/runtime-benchmarks",
	"sc-chain-spec/runtime-benchmarks",
	"sc-executor/runtime-benchmarks",
	"sc-service?/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-aura/runtime-benchmarks",
	"sp-consensus-babe/runtime-benchmarks",
	"sp-consensus-grandpa/runtime-benchmarks",
	"sp-genesis-builder/runtime-benchmarks",
	"sp-inherents/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-offchain/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-session/runtime-benchmarks",
	"sp-state-machine/runtime-benchmarks",
	"sp-transaction-pool/runtime-benchmarks",
	"sp-trie/runtime-benchmarks",
	"sp-version/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"frame-system-rpc-runtime-api/runtime-benchmarks",
	"sp-io/runtime-benchmarks",
	"substrate-wasm-builder?/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sc-executor-common/runtime-benchmarks"
]
try-runtime = [
	"frame-executive/try-runtime",
	"frame-metadata-hash-extension/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-timestamp/try-runtime",
	"sc-block-builder/try-runtime",
	"sc-chain-spec/try-runtime",
	"sc-executor/try-runtime",
	"sc-service?/try-runtime",
	"sp-api/try-runtime",
	"sp-block-builder/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-aura/try-runtime",
	"sp-consensus-babe/try-runtime",
	"sp-consensus-grandpa/try-runtime",
	"sp-genesis-builder/try-runtime",
	"sp-inherents/try-runtime",
	"sp-keyring/try-runtime",
	"sp-offchain/try-runtime",
	"sp-runtime/try-runtime",
	"sp-session/try-runtime",
	"sp-state-machine/try-runtime",
	"sp-transaction-pool/try-runtime",
	"sp-trie/try-runtime",
	"sp-version/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"frame-system-rpc-runtime-api/try-runtime",
	"sp-io/try-runtime",
	"substrate-wasm-builder?/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sc-executor-common/try-runtime"
]
