[package]
description = "Substrate sync network protocol (polkadot v1.15.0)"
name = "sc-network-sync"
version = "0.43.0"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
authors.workspace = true
edition.workspace = true
homepage = "https://substrate.io"
repository.workspace = true
documentation = "https://docs.rs/sc-network-sync"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
prost-build = { workspace = true }

[dependencies]
array-bytes = { workspace = true, default-features = true }
async-channel = { workspace = true }
async-trait = { workspace = true }
codec = { features = ["derive"], workspace = true, default-features = true }
futures = { workspace = true }
futures-timer = { workspace = true }
libp2p = { workspace = true }
log = { workspace = true, default-features = true }
mockall = { workspace = true }
prost = { workspace = true }
schnellru = { workspace = true }
smallvec = { workspace = true, default-features = true }
thiserror = { workspace = true }
tokio-stream = { workspace = true }
tokio = { features = ["macros", "time"], workspace = true, default-features = true }
fork-tree.workspace = true
fork-tree.default-features = true
prometheus-endpoint.workspace = true
prometheus-endpoint.default-features = true
sc-client-api.workspace = true
sc-client-api.default-features = true
sc-consensus.workspace = true
sc-consensus.default-features = true
sc-network.workspace = true
sc-network.default-features = true
sc-network-common.workspace = true
sc-network-common.default-features = true
sc-network-types.workspace = true
sc-network-types.default-features = true
sc-utils.workspace = true
sc-utils.default-features = true
sp-arithmetic.workspace = true
sp-arithmetic.default-features = true
sp-blockchain.workspace = true
sp-blockchain.default-features = true
sp-consensus.workspace = true
sp-consensus.default-features = true
sp-core.workspace = true
sp-core.default-features = true
sp-consensus-grandpa.workspace = true
sp-consensus-grandpa.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true

[dev-dependencies]
mockall = { workspace = true }
quickcheck = { workspace = true }
sc-block-builder = { default-features = true, path = "../../block-builder" }
sp-test-primitives = { path = "../../../primitives/test-primitives" }
sp-tracing = { default-features = true, path = "../../../primitives/tracing" }
substrate-test-runtime-client = { path = "../../../test-utils/runtime/client" }

[features]
std = [
	"fork-tree/std",
	"log/std",
	"sc-block-builder/std",
	"sc-client-api/std",
	"sc-consensus/std",
	"sc-network/std",
	"sc-network-common/std",
	"sc-network-types/std",
	"sc-utils/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"substrate-test-runtime-client/std"
]
runtime-benchmarks = [
	"sc-block-builder/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-network-common/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-grandpa/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-test-primitives/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"sp-core/runtime-benchmarks"
]
try-runtime = [
	"sc-block-builder/try-runtime",
	"sc-client-api/try-runtime",
	"sc-consensus/try-runtime",
	"sc-network/try-runtime",
	"sc-network-common/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-grandpa/try-runtime",
	"sp-runtime/try-runtime",
	"sp-test-primitives/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"sp-core/try-runtime"
]
