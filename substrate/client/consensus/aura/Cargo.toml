[package]
name = "sc-consensus-aura"
version = "0.44.0"
authors.workspace = true
description = "Aura consensus algorithm for substrate (polkadot v1.15.0)"
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository.workspace = true
readme = "README.md"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
async-trait = { workspace = true }
codec = { workspace = true, default-features = true }
futures = { workspace = true }
log = { workspace = true, default-features = true }
thiserror = { workspace = true }
prometheus-endpoint.workspace = true
prometheus-endpoint.default-features = true
sc-block-builder.workspace = true
sc-block-builder.default-features = true
sc-client-api.workspace = true
sc-client-api.default-features = true
sc-consensus.workspace = true
sc-consensus.default-features = true
sc-consensus-slots.workspace = true
sc-consensus-slots.default-features = true
sc-telemetry.workspace = true
sc-telemetry.default-features = true
sp-api.workspace = true
sp-api.default-features = true
sp-application-crypto.workspace = true
sp-application-crypto.default-features = true
sp-block-builder.workspace = true
sp-block-builder.default-features = true
sp-blockchain.workspace = true
sp-blockchain.default-features = true
sp-consensus.workspace = true
sp-consensus.default-features = true
sp-consensus-aura.workspace = true
sp-consensus-aura.default-features = true
sp-consensus-slots.workspace = true
sp-consensus-slots.default-features = true
sp-core.workspace = true
sp-core.default-features = true
sp-inherents.workspace = true
sp-inherents.default-features = true
sp-keystore.workspace = true
sp-keystore.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true

[dev-dependencies]
parking_lot = { workspace = true, default-features = true }
tempfile = { workspace = true }
sc-keystore = { default-features = true, path = "../../keystore" }
sc-network = { default-features = true, path = "../../network" }
sc-network-test = { path = "../../network/test" }
sp-keyring = { default-features = true, path = "../../../primitives/keyring" }
sp-timestamp = { default-features = true, path = "../../../primitives/timestamp" }
sp-tracing = { default-features = true, path = "../../../primitives/tracing" }
substrate-test-runtime-client = { path = "../../../test-utils/runtime/client" }
tokio = { workspace = true, default-features = true }

[features]
std = [
	"log/std",
	"sc-block-builder/std",
	"sc-client-api/std",
	"sc-consensus/std",
	"sc-consensus-slots/std",
	"sc-keystore/std",
	"sc-network/std",
	"sc-network-test/std",
	"sc-telemetry/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"substrate-test-runtime-client/std"
]
runtime-benchmarks = [
	"sc-block-builder/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-consensus-slots/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-network-test/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-aura/runtime-benchmarks",
	"sp-inherents/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-timestamp/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"sc-telemetry/runtime-benchmarks",
	"sp-consensus-slots/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sc-keystore/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
try-runtime = [
	"sc-block-builder/try-runtime",
	"sc-client-api/try-runtime",
	"sc-consensus/try-runtime",
	"sc-consensus-slots/try-runtime",
	"sc-network/try-runtime",
	"sc-network-test/try-runtime",
	"sp-api/try-runtime",
	"sp-block-builder/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-aura/try-runtime",
	"sp-inherents/try-runtime",
	"sp-keyring/try-runtime",
	"sp-runtime/try-runtime",
	"sp-timestamp/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"sc-telemetry/try-runtime",
	"sp-consensus-slots/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sc-keystore/try-runtime",
	"sp-keystore/try-runtime"
]
