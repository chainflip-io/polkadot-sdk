[package]
name = "sc-consensus-beefy"
version = "23.0.0"
authors.workspace = true
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
repository.workspace = true
description = "BEEFY Client gadget for substrate (polkadot v1.15.0)"
homepage = "https://substrate.io"

[lints]
workspace = true

[dependencies]
array-bytes = { workspace = true, default-features = true }
async-channel = { workspace = true }
async-trait = { workspace = true }
codec = { features = ["derive"], workspace = true, default-features = true }
fnv = { workspace = true }
futures = { workspace = true }
log = { workspace = true, default-features = true }
parking_lot = { workspace = true, default-features = true }
thiserror = { workspace = true }
wasm-timer = { workspace = true }
prometheus-endpoint.workspace = true
prometheus-endpoint.default-features = true
sc-client-api.workspace = true
sc-client-api.default-features = true
sc-consensus.workspace = true
sc-consensus.default-features = true
sc-network.workspace = true
sc-network.default-features = true
sc-network-gossip.workspace = true
sc-network-gossip.default-features = true
sc-network-sync.workspace = true
sc-network-sync.default-features = true
sc-network-types.workspace = true
sc-network-types.default-features = true
sc-utils.workspace = true
sc-utils.default-features = true
sp-api.workspace = true
sp-api.default-features = true
sp-application-crypto.workspace = true
sp-application-crypto.default-features = true
sp-arithmetic.workspace = true
sp-arithmetic.default-features = true
sp-blockchain.workspace = true
sp-blockchain.default-features = true
sp-consensus.workspace = true
sp-consensus.default-features = true
sp-consensus-beefy.workspace = true
sp-consensus-beefy.default-features = true
sp-core.workspace = true
sp-core.default-features = true
sp-crypto-hashing.workspace = true
sp-crypto-hashing.default-features = true
sp-keystore.workspace = true
sp-keystore.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true
tokio = { workspace = true, default-features = true }

[dev-dependencies]
serde = { workspace = true, default-features = true }
tempfile = { workspace = true }
sc-block-builder = { default-features = true, path = "../../block-builder" }
sc-network-test = { path = "../../network/test" }
sp-consensus-grandpa = { default-features = true, path = "../../../primitives/consensus/grandpa" }
sp-keyring = { default-features = true, path = "../../../primitives/keyring" }
sp-mmr-primitives = { default-features = true, path = "../../../primitives/merkle-mountain-range" }
sp-tracing = { default-features = true, path = "../../../primitives/tracing" }
substrate-test-runtime-client = { path = "../../../test-utils/runtime/client" }

[features]
# This feature adds BLS crypto primitives. It should not be used in production since
# the BLS implementation and interface may still be subject to significant change.
bls-experimental = [
	"sp-application-crypto/bls-experimental",
	"sp-consensus-beefy/bls-experimental",
	"sp-core/bls-experimental",
]
std = [
	"log/std",
	"sc-block-builder/std",
	"sc-client-api/std",
	"sc-consensus/std",
	"sc-network/std",
	"sc-network-gossip/std",
	"sc-network-sync/std",
	"sc-network-test/std",
	"sc-network-types/std",
	"sc-utils/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"substrate-test-runtime-client/std"
]
runtime-benchmarks = [
	"sc-block-builder/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-network-gossip/runtime-benchmarks",
	"sc-network-sync/runtime-benchmarks",
	"sc-network-test/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-beefy/runtime-benchmarks",
	"sp-consensus-grandpa/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-mmr-primitives/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
try-runtime = [
	"sc-block-builder/try-runtime",
	"sc-client-api/try-runtime",
	"sc-consensus/try-runtime",
	"sc-network/try-runtime",
	"sc-network-gossip/try-runtime",
	"sc-network-sync/try-runtime",
	"sc-network-test/try-runtime",
	"sp-api/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-beefy/try-runtime",
	"sp-consensus-grandpa/try-runtime",
	"sp-keyring/try-runtime",
	"sp-mmr-primitives/try-runtime",
	"sp-runtime/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sp-keystore/try-runtime"
]
