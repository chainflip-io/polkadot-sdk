[package]
name = "sc-consensus-babe-rpc"
version = "0.44.0"
authors.workspace = true
description = "RPC extensions for the BABE consensus algorithm (polkadot v1.15.0)"
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository.workspace = true
readme = "README.md"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
jsonrpsee = { features = ["client-core", "macros", "server-core"], workspace = true }
futures = { workspace = true }
serde = { features = ["derive"], workspace = true, default-features = true }
thiserror = { workspace = true }
sc-consensus-babe.workspace = true
sc-consensus-babe.default-features = true
sc-consensus-epochs.workspace = true
sc-consensus-epochs.default-features = true
sc-rpc-api.workspace = true
sc-rpc-api.default-features = true
sp-api.workspace = true
sp-api.default-features = true
sp-application-crypto.workspace = true
sp-application-crypto.default-features = true
sp-blockchain.workspace = true
sp-blockchain.default-features = true
sp-consensus.workspace = true
sp-consensus.default-features = true
sp-consensus-babe.workspace = true
sp-consensus-babe.default-features = true
sp-core.workspace = true
sp-core.default-features = true
sp-keystore.workspace = true
sp-keystore.default-features = true
sp-runtime.workspace = true
sp-runtime.default-features = true

[dev-dependencies]
serde_json = { workspace = true, default-features = true }
tokio = { workspace = true, default-features = true }
sc-consensus = { default-features = true, path = "../../common" }
sc-keystore = { default-features = true, path = "../../../keystore" }
sc-transaction-pool-api = { default-features = true, path = "../../../transaction-pool/api" }
sp-keyring = { default-features = true, path = "../../../../primitives/keyring" }
substrate-test-runtime-client = { path = "../../../../test-utils/runtime/client" }

[features]
std = [
	"sc-consensus/std",
	"sc-consensus-babe/std",
	"sc-consensus-epochs/std",
	"sc-keystore/std",
	"sc-rpc-api/std",
	"sc-transaction-pool-api/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"substrate-test-runtime-client/std"
]
runtime-benchmarks = [
	"sc-consensus/runtime-benchmarks",
	"sc-consensus-babe/runtime-benchmarks",
	"sc-consensus-epochs/runtime-benchmarks",
	"sc-rpc-api/runtime-benchmarks",
	"sc-transaction-pool-api/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-consensus-babe/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sc-keystore/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
try-runtime = [
	"sc-consensus/try-runtime",
	"sc-consensus-babe/try-runtime",
	"sc-consensus-epochs/try-runtime",
	"sc-rpc-api/try-runtime",
	"sc-transaction-pool-api/try-runtime",
	"sp-api/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-consensus-babe/try-runtime",
	"sp-keyring/try-runtime",
	"sp-runtime/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sc-keystore/try-runtime",
	"sp-keystore/try-runtime"
]
